/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.jarviscrawlercore.ReplyTokyoMetro', null, global);
goog.exportSymbol('proto.jarviscrawlercore.RequestTokyoMetro', null, global);
goog.exportSymbol('proto.jarviscrawlercore.TokyoMetroLine', null, global);
goog.exportSymbol('proto.jarviscrawlercore.TokyoMetroMode', null, global);
goog.exportSymbol('proto.jarviscrawlercore.TokyoMetroSubways', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.TokyoMetroLine = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.TokyoMetroLine.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.TokyoMetroLine, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.TokyoMetroLine.displayName = 'proto.jarviscrawlercore.TokyoMetroLine';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.TokyoMetroLine.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.TokyoMetroLine.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.TokyoMetroLine.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.TokyoMetroLine} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.TokyoMetroLine.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stationsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.TokyoMetroLine}
 */
proto.jarviscrawlercore.TokyoMetroLine.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.TokyoMetroLine;
  return proto.jarviscrawlercore.TokyoMetroLine.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.TokyoMetroLine} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.TokyoMetroLine}
 */
proto.jarviscrawlercore.TokyoMetroLine.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addStations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.TokyoMetroLine.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.TokyoMetroLine.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.TokyoMetroLine} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.TokyoMetroLine.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.jarviscrawlercore.TokyoMetroLine.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.TokyoMetroLine.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.jarviscrawlercore.TokyoMetroLine.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.TokyoMetroLine.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string stations = 3;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.TokyoMetroLine.prototype.getStationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.TokyoMetroLine.prototype.setStationsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.TokyoMetroLine.prototype.addStations = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.jarviscrawlercore.TokyoMetroLine.prototype.clearStationsList = function() {
  this.setStationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.TokyoMetroSubways = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.TokyoMetroSubways.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.TokyoMetroSubways, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.TokyoMetroSubways.displayName = 'proto.jarviscrawlercore.TokyoMetroSubways';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.TokyoMetroSubways.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.TokyoMetroSubways.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.TokyoMetroSubways.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.TokyoMetroSubways} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.TokyoMetroSubways.toObject = function(includeInstance, msg) {
  var f, obj = {
    subwaysList: jspb.Message.toObjectList(msg.getSubwaysList(),
    proto.jarviscrawlercore.TokyoMetroLine.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.TokyoMetroSubways}
 */
proto.jarviscrawlercore.TokyoMetroSubways.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.TokyoMetroSubways;
  return proto.jarviscrawlercore.TokyoMetroSubways.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.TokyoMetroSubways} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.TokyoMetroSubways}
 */
proto.jarviscrawlercore.TokyoMetroSubways.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.jarviscrawlercore.TokyoMetroLine;
      reader.readMessage(value,proto.jarviscrawlercore.TokyoMetroLine.deserializeBinaryFromReader);
      msg.addSubways(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.TokyoMetroSubways.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.TokyoMetroSubways.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.TokyoMetroSubways} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.TokyoMetroSubways.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubwaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.jarviscrawlercore.TokyoMetroLine.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TokyoMetroLine subways = 1;
 * @return {!Array<!proto.jarviscrawlercore.TokyoMetroLine>}
 */
proto.jarviscrawlercore.TokyoMetroSubways.prototype.getSubwaysList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.TokyoMetroLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.TokyoMetroLine, 1));
};


/** @param {!Array<!proto.jarviscrawlercore.TokyoMetroLine>} value */
proto.jarviscrawlercore.TokyoMetroSubways.prototype.setSubwaysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.jarviscrawlercore.TokyoMetroLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.TokyoMetroLine}
 */
proto.jarviscrawlercore.TokyoMetroSubways.prototype.addSubways = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.jarviscrawlercore.TokyoMetroLine, opt_index);
};


proto.jarviscrawlercore.TokyoMetroSubways.prototype.clearSubwaysList = function() {
  this.setSubwaysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.RequestTokyoMetro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jarviscrawlercore.RequestTokyoMetro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.RequestTokyoMetro.displayName = 'proto.jarviscrawlercore.RequestTokyoMetro';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.RequestTokyoMetro.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.RequestTokyoMetro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.RequestTokyoMetro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.RequestTokyoMetro.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    url: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.RequestTokyoMetro}
 */
proto.jarviscrawlercore.RequestTokyoMetro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.RequestTokyoMetro;
  return proto.jarviscrawlercore.RequestTokyoMetro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.RequestTokyoMetro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.RequestTokyoMetro}
 */
proto.jarviscrawlercore.RequestTokyoMetro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.jarviscrawlercore.TokyoMetroMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.RequestTokyoMetro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.RequestTokyoMetro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.RequestTokyoMetro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.RequestTokyoMetro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional TokyoMetroMode mode = 1;
 * @return {!proto.jarviscrawlercore.TokyoMetroMode}
 */
proto.jarviscrawlercore.RequestTokyoMetro.prototype.getMode = function() {
  return /** @type {!proto.jarviscrawlercore.TokyoMetroMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.jarviscrawlercore.TokyoMetroMode} value */
proto.jarviscrawlercore.RequestTokyoMetro.prototype.setMode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.jarviscrawlercore.RequestTokyoMetro.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.RequestTokyoMetro.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.ReplyTokyoMetro = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jarviscrawlercore.ReplyTokyoMetro.oneofGroups_);
};
goog.inherits(proto.jarviscrawlercore.ReplyTokyoMetro, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.ReplyTokyoMetro.displayName = 'proto.jarviscrawlercore.ReplyTokyoMetro';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jarviscrawlercore.ReplyTokyoMetro.oneofGroups_ = [[100,101]];

/**
 * @enum {number}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.ReplyCase = {
  REPLY_NOT_SET: 0,
  SUBWAYS: 100,
  LINE: 101
};

/**
 * @return {proto.jarviscrawlercore.ReplyTokyoMetro.ReplyCase}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.getReplyCase = function() {
  return /** @type {proto.jarviscrawlercore.ReplyTokyoMetro.ReplyCase} */(jspb.Message.computeOneofCase(this, proto.jarviscrawlercore.ReplyTokyoMetro.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.ReplyTokyoMetro.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.ReplyTokyoMetro} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.ReplyTokyoMetro.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    subways: (f = msg.getSubways()) && proto.jarviscrawlercore.TokyoMetroSubways.toObject(includeInstance, f),
    line: (f = msg.getLine()) && proto.jarviscrawlercore.TokyoMetroLine.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.ReplyTokyoMetro}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.ReplyTokyoMetro;
  return proto.jarviscrawlercore.ReplyTokyoMetro.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.ReplyTokyoMetro} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.ReplyTokyoMetro}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.jarviscrawlercore.TokyoMetroMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 100:
      var value = new proto.jarviscrawlercore.TokyoMetroSubways;
      reader.readMessage(value,proto.jarviscrawlercore.TokyoMetroSubways.deserializeBinaryFromReader);
      msg.setSubways(value);
      break;
    case 101:
      var value = new proto.jarviscrawlercore.TokyoMetroLine;
      reader.readMessage(value,proto.jarviscrawlercore.TokyoMetroLine.deserializeBinaryFromReader);
      msg.setLine(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.ReplyTokyoMetro.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.ReplyTokyoMetro} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.ReplyTokyoMetro.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSubways();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.jarviscrawlercore.TokyoMetroSubways.serializeBinaryToWriter
    );
  }
  f = message.getLine();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.jarviscrawlercore.TokyoMetroLine.serializeBinaryToWriter
    );
  }
};


/**
 * optional TokyoMetroMode mode = 1;
 * @return {!proto.jarviscrawlercore.TokyoMetroMode}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.getMode = function() {
  return /** @type {!proto.jarviscrawlercore.TokyoMetroMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.jarviscrawlercore.TokyoMetroMode} value */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.setMode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TokyoMetroSubways subways = 100;
 * @return {?proto.jarviscrawlercore.TokyoMetroSubways}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.getSubways = function() {
  return /** @type{?proto.jarviscrawlercore.TokyoMetroSubways} */ (
    jspb.Message.getWrapperField(this, proto.jarviscrawlercore.TokyoMetroSubways, 100));
};


/** @param {?proto.jarviscrawlercore.TokyoMetroSubways|undefined} value */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.setSubways = function(value) {
  jspb.Message.setOneofWrapperField(this, 100, proto.jarviscrawlercore.ReplyTokyoMetro.oneofGroups_[0], value);
};


proto.jarviscrawlercore.ReplyTokyoMetro.prototype.clearSubways = function() {
  this.setSubways(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.hasSubways = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional TokyoMetroLine line = 101;
 * @return {?proto.jarviscrawlercore.TokyoMetroLine}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.getLine = function() {
  return /** @type{?proto.jarviscrawlercore.TokyoMetroLine} */ (
    jspb.Message.getWrapperField(this, proto.jarviscrawlercore.TokyoMetroLine, 101));
};


/** @param {?proto.jarviscrawlercore.TokyoMetroLine|undefined} value */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.setLine = function(value) {
  jspb.Message.setOneofWrapperField(this, 101, proto.jarviscrawlercore.ReplyTokyoMetro.oneofGroups_[0], value);
};


proto.jarviscrawlercore.ReplyTokyoMetro.prototype.clearLine = function() {
  this.setLine(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jarviscrawlercore.ReplyTokyoMetro.prototype.hasLine = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * @enum {number}
 */
proto.jarviscrawlercore.TokyoMetroMode = {
  TOKYOMM_SUBWAYS: 0,
  TOKYOMM_LINE: 1
};

goog.object.extend(exports, proto.jarviscrawlercore);
