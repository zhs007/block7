package block7serv

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_parseMissionDataParams(t *testing.T) {
	p, err := parseMissionDataParams([]byte(``))
	assert.Error(t, err)
	assert.Nil(t, p)

	p, err = parseMissionDataParams([]byte(`{"userHash":"tL1QXb4HHQz172tO","mission":80,"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]],"srcHistory":25}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)

	p, err = parseMissionDataParams([]byte(`{"userHash":123,"mission":80,"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]],"srcHistory":25}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)

	p, err = parseMissionDataParams([]byte(`{"userHash":123.456,"mission":80,"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]],"srcHistory":25}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)

	p, err = parseMissionDataParams([]byte(`{"mission":80,"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]],"srcHistory":25}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)

	p, err = parseMissionDataParams([]byte(`{"mission":80,"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]]}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)

	// p, err = parseMissionDataParams([]byte(`{"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]]}`))
	// assert.Error(t, err)
	// assert.Nil(t, p)

	p, err = parseMissionDataParams([]byte(`{"mission":"80","history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]]}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)

	p, err = parseMissionDataParams([]byte(`{"mission":80.123,"history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]]}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)
	assert.Equal(t, p.SceneID, int64(80))

	p, err = parseMissionDataParams([]byte(`{"mission":"80.123","history":[[3,5,10,6],[4,5,10,6],[4,5,9,7],[4,4,9,8],[3,6,8,8],[3,6,7,9],[5,3,7,11],[4,5,8,12],[2,7,6,12],[5,3,6,13],[6,2,5,14],[4,6,8,15],[5,6,7,16],[3,5,8,16],[2,7,5,17],[3,4,7,18],[5,2,4,19],[3,3,7,21],[6,2,4,22],[5,5,7,22],[5,7,6,23],[2,4,6,24],[6,7,5,25],[5,8,4,25],[2,8,4,26],[5,6,6,27],[5,5,6,28],[6,6,5,29],[5,4,6,30],[6,5,5,30],[5,6,4,31],[6,6,4,33],[2,2,5,34],[2,2,4,36],[1,2,4,36],[5,7,4,37],[3,5,7,38],[6,4,5,39],[2,6,6,40],[6,4,4,40],[6,5,4,42],[5,6,3,42],[2,3,5,43],[6,7,4,44],[5,7,3,45],[1,3,4,45],[4,7,2,46],[6,3,4,48],[2,6,5,48],[6,7,3,49],[5,3,4,50],[5,5,4,51],[2,7,4,51],[5,4,4,52],[5,2,3,53],[2,5,5,53],[6,3,3,54],[2,4,5,55],[6,5,3,55],[6,2,3,56],[5,3,3,57],[1,5,4,58],[2,5,4,58],[1,7,4,59],[6,6,3,60],[5,4,3,60],[6,4,3,61],[2,6,4,61],[5,5,3,62],[4,4,2,63],[2,3,4,64],[4,5,2,64],[1,4,4,65],[2,5,3,66],[4,3,2,66],[5,5,2,67],[2,2,3,68],[2,4,4,69],[3,3,3,69],[5,4,1,70],[3,4,3,71],[5,5,0,71],[3,6,3,72],[3,5,3,73],[3,4,2,74],[3,2,3,76],[2,3,3,77],[2,3,2,77],[2,7,3,78],[2,4,3,79],[5,6,2,80],[2,5,2,81],[5,7,2,82],[5,6,1,82],[5,3,2,83],[5,3,1,84],[5,3,0,85],[5,4,0,85],[5,7,0,86],[3,3,2,87],[4,3,1,87],[2,7,2,88],[4,7,0,89],[3,6,2,89],[3,7,2,90],[3,6,1,91],[3,5,2,91],[2,6,0,92],[2,7,0,93],[4,5,1,94],[2,4,2,94],[3,3,1,95],[2,3,0,96],[4,4,1,97],[3,4,1,97],[4,5,0,98],[3,6,0,99],[3,5,0,99],[4,6,0,100],[3,7,0,100],[2,5,0,101],[3,4,0,102],[3,3,0,102],[4,4,0,103],[5,6,0,103]]}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)
	assert.Equal(t, p.SceneID, int64(80))

	p, err = parseMissionDataParams([]byte(`{"history":[[5,7,0,1],[5,6,0,1],[5,4,0,2],[3,3,0,2],[3,4,0,2],[3,5,0,3],[4,5,0,3],[5,5,0,3],[4,4,0,4],[4,3,0,4],[5,3,0,4],[4,6,0,5],[4,7,0,5],[3,7,0,6],[3,6,0,7]],"mission":7,"userHash":"lCduWE5rUoiQAqJi"}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)
	assert.Equal(t, p.SceneID, int64(7))
	assert.Equal(t, len(p.History[0]), 4)

	t.Logf("Test_parseMissionDataParams OK")
}

func Test_parseUpdUserDataParams(t *testing.T) {
	p, ps, err := parseUpdUserDataParams([]byte(``))
	assert.Error(t, err)
	assert.Nil(t, p)
	assert.Nil(t, ps)

	p, ps, err = parseUpdUserDataParams([]byte(`{"name":"kUzsFBBpdijLtiLz","coin":"","level":"","levelarr":{"1":3},"toolsarr":{"20001":2},"homeScene":[21100,21101,21102,21103,21104,21105],"cooking":[{"Level":1,"Unlock":true,"starnum":0}],"platform":"android","version":1,"userHash":"kUzsFBBpdijLtiLz","clientVersion":"1.0.1"}`))
	assert.NoError(t, err)
	assert.NotNil(t, p)
	assert.NotNil(t, ps)

	t.Logf("Test_parseMissionDataParams OK")
}
