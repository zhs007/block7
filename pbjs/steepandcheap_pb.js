/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.jarviscrawlercore.ReplySteepAndCheap', null, global);
goog.exportSymbol('proto.jarviscrawlercore.RequestSteepAndCheap', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapColorSize', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapColorSize2', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapColorSizeData', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapHistory', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapMode', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapProduct', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapProducts', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapReview', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapSaleProductInfo', null, global);
goog.exportSymbol('proto.jarviscrawlercore.SteepAndCheapUser', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapSaleProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.displayName = 'proto.jarviscrawlercore.SteepAndCheapSaleProductInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    salecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapSaleProductInfo;
  return proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalecode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSalecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string saleCode = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.getSalecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.setSalecode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 rank = 2;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.setRank = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 score = 3;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.prototype.setScore = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapColorSizeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapColorSizeData.displayName = 'proto.jarviscrawlercore.SteepAndCheapColorSizeData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapColorSizeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSizeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sizevalid: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSizeData}
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapColorSizeData;
  return proto.jarviscrawlercore.SteepAndCheapColorSizeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSizeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSizeData}
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSizevalid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapColorSizeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSizeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSizevalid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string size = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.prototype.getSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.prototype.setSize = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool sizeValid = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.prototype.getSizevalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.jarviscrawlercore.SteepAndCheapColorSizeData.prototype.setSizevalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapColorSize = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.SteepAndCheapColorSize.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapColorSize, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapColorSize.displayName = 'proto.jarviscrawlercore.SteepAndCheapColorSize';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapColorSize.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.toObject = function(includeInstance, msg) {
  var f, obj = {
    color: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sizeList: jspb.Message.getRepeatedField(msg, 2),
    sizevalidList: jspb.Message.getRepeatedField(msg, 3),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.jarviscrawlercore.SteepAndCheapColorSizeData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapColorSize;
  return proto.jarviscrawlercore.SteepAndCheapColorSize.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSize(value);
      break;
    case 3:
      var value = /** @type {!Array<boolean>} */ (reader.readPackedBool());
      msg.setSizevalidList(value);
      break;
    case 4:
      var value = new proto.jarviscrawlercore.SteepAndCheapColorSizeData;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapColorSizeData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapColorSize.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSizeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSizevalidList();
  if (f.length > 0) {
    writer.writePackedBool(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.jarviscrawlercore.SteepAndCheapColorSizeData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string color = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.setColor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string size = 2;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.getSizeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.setSizeList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.addSize = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.clearSizeList = function() {
  this.setSizeList([]);
};


/**
 * repeated bool sizeValid = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {!Array<boolean>}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.getSizevalidList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<boolean>} value */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.setSizevalidList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.addSizevalid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.clearSizevalidList = function() {
  this.setSizevalidList([]);
};


/**
 * repeated SteepAndCheapColorSizeData data = 4;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSizeData>}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.getDataList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapColorSizeData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapColorSizeData, 4));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSizeData>} value */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSizeData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSizeData}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.jarviscrawlercore.SteepAndCheapColorSizeData, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapColorSize.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapColorSize2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapColorSize2.displayName = 'proto.jarviscrawlercore.SteepAndCheapColorSize2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapColorSize2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.toObject = function(includeInstance, msg) {
  var f, obj = {
    color: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize2}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapColorSize2;
  return proto.jarviscrawlercore.SteepAndCheapColorSize2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize2}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapColorSize2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional string color = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.setColor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string size = 2;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.getSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.setSize = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float price = 3;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapColorSize2.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapUser.displayName = 'proto.jarviscrawlercore.SteepAndCheapUser';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    photo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    height: jspb.Message.getFieldWithDefault(msg, 3, ""),
    weight: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapUser}
 */
proto.jarviscrawlercore.SteepAndCheapUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapUser;
  return proto.jarviscrawlercore.SteepAndCheapUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapUser}
 */
proto.jarviscrawlercore.SteepAndCheapUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoto(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeight(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhoto();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWeight();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string photo = 2;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.getPhoto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.setPhoto = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string height = 3;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.getHeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.setHeight = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string weight = 4;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.getWeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapUser.prototype.setWeight = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapReview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.SteepAndCheapReview.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapReview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapReview.displayName = 'proto.jarviscrawlercore.SteepAndCheapReview';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.SteepAndCheapReview.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapReview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapReview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapReview.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rating: jspb.Message.getFieldWithDefault(msg, 3, 0),
    familiarity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fit: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sizebought: jspb.Message.getFieldWithDefault(msg, 6, ""),
    imgsList: jspb.Message.getRepeatedField(msg, 7),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    user: (f = msg.getUser()) && proto.jarviscrawlercore.SteepAndCheapUser.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapReview}
 */
proto.jarviscrawlercore.SteepAndCheapReview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapReview;
  return proto.jarviscrawlercore.SteepAndCheapReview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapReview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapReview}
 */
proto.jarviscrawlercore.SteepAndCheapReview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamiliarity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSizebought(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addImgs(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new proto.jarviscrawlercore.SteepAndCheapUser;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapReview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapReview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapReview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFamiliarity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSizebought();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.jarviscrawlercore.SteepAndCheapUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 createTime = 2;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setCreatetime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rating = 3;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setRating = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string familiarity = 4;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getFamiliarity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setFamiliarity = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string fit = 5;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getFit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setFit = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string sizeBought = 6;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getSizebought = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setSizebought = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string imgs = 7;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getImgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setImgsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.addImgs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapReview.prototype.clearImgsList = function() {
  this.setImgsList([]);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional SteepAndCheapUser user = 9;
 * @return {?proto.jarviscrawlercore.SteepAndCheapUser}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.getUser = function() {
  return /** @type{?proto.jarviscrawlercore.SteepAndCheapUser} */ (
    jspb.Message.getWrapperField(this, proto.jarviscrawlercore.SteepAndCheapUser, 9));
};


/** @param {?proto.jarviscrawlercore.SteepAndCheapUser|undefined} value */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.jarviscrawlercore.SteepAndCheapReview.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jarviscrawlercore.SteepAndCheapReview.prototype.hasUser = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.SteepAndCheapHistory.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapHistory.displayName = 'proto.jarviscrawlercore.SteepAndCheapHistory';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.SteepAndCheapHistory.repeatedFields_ = [7,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatetime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    price: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    curprice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    stocklevel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    reviews: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ratingvalue: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    colorList: jspb.Message.toObjectList(msg.getColorList(),
    proto.jarviscrawlercore.SteepAndCheapColorSize.toObject, includeInstance),
    salecode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    offersList: jspb.Message.toObjectList(msg.getOffersList(),
    proto.jarviscrawlercore.SteepAndCheapColorSize2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapHistory}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapHistory;
  return proto.jarviscrawlercore.SteepAndCheapHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapHistory}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStocklevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReviews(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRatingvalue(value);
      break;
    case 7:
      var value = new proto.jarviscrawlercore.SteepAndCheapColorSize;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapColorSize.deserializeBinaryFromReader);
      msg.addColor(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalecode(value);
      break;
    case 9:
      var value = new proto.jarviscrawlercore.SteepAndCheapColorSize2;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapColorSize2.deserializeBinaryFromReader);
      msg.addOffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getCurprice();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getStocklevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getReviews();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getRatingvalue();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getColorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.jarviscrawlercore.SteepAndCheapColorSize.serializeBinaryToWriter
    );
  }
  f = message.getSalecode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.jarviscrawlercore.SteepAndCheapColorSize2.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 updateTime = 1;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float price = 2;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float curPrice = 3;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getCurprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setCurprice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 stockLevel = 4;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getStocklevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setStocklevel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 reviews = 5;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getReviews = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setReviews = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float ratingValue = 6;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getRatingvalue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setRatingvalue = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated SteepAndCheapColorSize color = 7;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize>}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getColorList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapColorSize, 7));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize>} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setColorList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.addColor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.jarviscrawlercore.SteepAndCheapColorSize, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapHistory.prototype.clearColorList = function() {
  this.setColorList([]);
};


/**
 * optional string saleCode = 8;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getSalecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setSalecode = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated SteepAndCheapColorSize2 offers = 9;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize2>}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.getOffersList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapColorSize2, 9));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize2>} value */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.setOffersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize2}
 */
proto.jarviscrawlercore.SteepAndCheapHistory.prototype.addOffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.jarviscrawlercore.SteepAndCheapColorSize2, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapHistory.prototype.clearOffersList = function() {
  this.setOffersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapProduct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.SteepAndCheapProduct.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapProduct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapProduct.displayName = 'proto.jarviscrawlercore.SteepAndCheapProduct';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.SteepAndCheapProduct.repeatedFields_ = [3,12,13,14,21,26,27,28,29,33];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapProduct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapProduct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapProduct.toObject = function(includeInstance, msg) {
  var f, obj = {
    brandname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    skuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productnameList: jspb.Message.getRepeatedField(msg, 3),
    stocklevel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    price: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    curprice: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    url: jspb.Message.getFieldWithDefault(msg, 7, ""),
    reviews: jspb.Message.getFieldWithDefault(msg, 8, 0),
    ratingvalue: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isnew: jspb.Message.getFieldWithDefault(msg, 11, false),
    categoryList: jspb.Message.getRepeatedField(msg, 12),
    imgsList: jspb.Message.getRepeatedField(msg, 13),
    colorList: jspb.Message.toObjectList(msg.getColorList(),
    proto.jarviscrawlercore.SteepAndCheapColorSize.toObject, includeInstance),
    material: jspb.Message.getFieldWithDefault(msg, 15, ""),
    fit: jspb.Message.getFieldWithDefault(msg, 16, ""),
    style: jspb.Message.getFieldWithDefault(msg, 17, ""),
    ratingupf: jspb.Message.getFieldWithDefault(msg, 18, ""),
    claimedweight: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
    weightunit: jspb.Message.getFieldWithDefault(msg, 20, ""),
    recommendeduseList: jspb.Message.getRepeatedField(msg, 21),
    manufacturerwarranty: jspb.Message.getFieldWithDefault(msg, 22, ""),
    strweight: jspb.Message.getFieldWithDefault(msg, 23, ""),
    infomation: jspb.Message.getFieldWithDefault(msg, 24, ""),
    sizechart: jspb.Message.getFieldWithDefault(msg, 25, ""),
    lstreviewList: jspb.Message.toObjectList(msg.getLstreviewList(),
    proto.jarviscrawlercore.SteepAndCheapReview.toObject, includeInstance),
    linkproductsList: jspb.Message.getRepeatedField(msg, 27),
    lsthistoryList: jspb.Message.toObjectList(msg.getLsthistoryList(),
    proto.jarviscrawlercore.SteepAndCheapHistory.toObject, includeInstance),
    lstsaleList: jspb.Message.toObjectList(msg.getLstsaleList(),
    proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.toObject, includeInstance),
    lastupdatedtime: jspb.Message.getFieldWithDefault(msg, 30, 0),
    minprice: +jspb.Message.getFieldWithDefault(msg, 31, 0.0),
    maxprice: +jspb.Message.getFieldWithDefault(msg, 32, 0.0),
    offersList: jspb.Message.toObjectList(msg.getOffersList(),
    proto.jarviscrawlercore.SteepAndCheapColorSize2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapProduct}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapProduct;
  return proto.jarviscrawlercore.SteepAndCheapProduct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapProduct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapProduct}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrandname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addProductname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStocklevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurprice(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReviews(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRatingvalue(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnew(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategory(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addImgs(value);
      break;
    case 14:
      var value = new proto.jarviscrawlercore.SteepAndCheapColorSize;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapColorSize.deserializeBinaryFromReader);
      msg.addColor(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterial(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setFit(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setStyle(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setRatingupf(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setClaimedweight(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightunit(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecommendeduse(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturerwarranty(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrweight(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfomation(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setSizechart(value);
      break;
    case 26:
      var value = new proto.jarviscrawlercore.SteepAndCheapReview;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapReview.deserializeBinaryFromReader);
      msg.addLstreview(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.addLinkproducts(value);
      break;
    case 28:
      var value = new proto.jarviscrawlercore.SteepAndCheapHistory;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapHistory.deserializeBinaryFromReader);
      msg.addLsthistory(value);
      break;
    case 29:
      var value = new proto.jarviscrawlercore.SteepAndCheapSaleProductInfo;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.deserializeBinaryFromReader);
      msg.addLstsale(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastupdatedtime(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinprice(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxprice(value);
      break;
    case 33:
      var value = new proto.jarviscrawlercore.SteepAndCheapColorSize2;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapColorSize2.deserializeBinaryFromReader);
      msg.addOffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapProduct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapProduct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapProduct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrandname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSkuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductnameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getStocklevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getCurprice();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReviews();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getRatingvalue();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsnew();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getImgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getColorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.jarviscrawlercore.SteepAndCheapColorSize.serializeBinaryToWriter
    );
  }
  f = message.getMaterial();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getFit();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getStyle();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getRatingupf();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getClaimedweight();
  if (f !== 0.0) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = message.getWeightunit();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getRecommendeduseList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getManufacturerwarranty();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getStrweight();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getInfomation();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSizechart();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLstreviewList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      26,
      f,
      proto.jarviscrawlercore.SteepAndCheapReview.serializeBinaryToWriter
    );
  }
  f = message.getLinkproductsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      27,
      f
    );
  }
  f = message.getLsthistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      28,
      f,
      proto.jarviscrawlercore.SteepAndCheapHistory.serializeBinaryToWriter
    );
  }
  f = message.getLstsaleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      29,
      f,
      proto.jarviscrawlercore.SteepAndCheapSaleProductInfo.serializeBinaryToWriter
    );
  }
  f = message.getLastupdatedtime();
  if (f !== 0) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = message.getMinprice();
  if (f !== 0.0) {
    writer.writeFloat(
      31,
      f
    );
  }
  f = message.getMaxprice();
  if (f !== 0.0) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = message.getOffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      33,
      f,
      proto.jarviscrawlercore.SteepAndCheapColorSize2.serializeBinaryToWriter
    );
  }
};


/**
 * optional string brandName = 1;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getBrandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setBrandname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string skuid = 2;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getSkuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setSkuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string productName = 3;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getProductnameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setProductnameList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addProductname = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearProductnameList = function() {
  this.setProductnameList([]);
};


/**
 * optional int32 stockLevel = 4;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getStocklevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setStocklevel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional float price = 5;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float curPrice = 6;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getCurprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setCurprice = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 reviews = 8;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getReviews = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setReviews = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float ratingValue = 9;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getRatingvalue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setRatingvalue = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string currency = 10;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool isNew = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getIsnew = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setIsnew = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * repeated string category = 12;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getCategoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setCategoryList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addCategory = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearCategoryList = function() {
  this.setCategoryList([]);
};


/**
 * repeated string imgs = 13;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getImgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setImgsList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addImgs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearImgsList = function() {
  this.setImgsList([]);
};


/**
 * repeated SteepAndCheapColorSize color = 14;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getColorList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapColorSize, 14));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setColorList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addColor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.jarviscrawlercore.SteepAndCheapColorSize, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearColorList = function() {
  this.setColorList([]);
};


/**
 * optional string material = 15;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getMaterial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setMaterial = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string fit = 16;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getFit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setFit = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string style = 17;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setStyle = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string ratingUPF = 18;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getRatingupf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setRatingupf = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional float claimedWeight = 19;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getClaimedweight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setClaimedweight = function(value) {
  jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional string weightUnit = 20;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getWeightunit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setWeightunit = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated string recommendedUse = 21;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getRecommendeduseList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setRecommendeduseList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addRecommendeduse = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearRecommendeduseList = function() {
  this.setRecommendeduseList([]);
};


/**
 * optional string manufacturerWarranty = 22;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getManufacturerwarranty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setManufacturerwarranty = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string strWeight = 23;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getStrweight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setStrweight = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string infomation = 24;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getInfomation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setInfomation = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string sizeChart = 25;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getSizechart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setSizechart = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * repeated SteepAndCheapReview lstReview = 26;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapReview>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getLstreviewList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapReview>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapReview, 26));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapReview>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setLstreviewList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 26, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapReview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapReview}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addLstreview = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, proto.jarviscrawlercore.SteepAndCheapReview, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearLstreviewList = function() {
  this.setLstreviewList([]);
};


/**
 * repeated string linkProducts = 27;
 * @return {!Array<string>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getLinkproductsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 27));
};


/** @param {!Array<string>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setLinkproductsList = function(value) {
  jspb.Message.setField(this, 27, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addLinkproducts = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 27, value, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearLinkproductsList = function() {
  this.setLinkproductsList([]);
};


/**
 * repeated SteepAndCheapHistory lstHistory = 28;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapHistory>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getLsthistoryList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapHistory, 28));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapHistory>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setLsthistoryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 28, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapHistory}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addLsthistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 28, opt_value, proto.jarviscrawlercore.SteepAndCheapHistory, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearLsthistoryList = function() {
  this.setLsthistoryList([]);
};


/**
 * repeated SteepAndCheapSaleProductInfo lstSale = 29;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getLstsaleList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapSaleProductInfo, 29));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setLstsaleList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 29, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapSaleProductInfo}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addLstsale = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 29, opt_value, proto.jarviscrawlercore.SteepAndCheapSaleProductInfo, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearLstsaleList = function() {
  this.setLstsaleList([]);
};


/**
 * optional int64 lastUpdatedTime = 30;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getLastupdatedtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setLastupdatedtime = function(value) {
  jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional float minPrice = 31;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getMinprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 31, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setMinprice = function(value) {
  jspb.Message.setProto3FloatField(this, 31, value);
};


/**
 * optional float maxPrice = 32;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getMaxprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setMaxprice = function(value) {
  jspb.Message.setProto3FloatField(this, 32, value);
};


/**
 * repeated SteepAndCheapColorSize2 offers = 33;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize2>}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.getOffersList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapColorSize2, 33));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapColorSize2>} value */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.setOffersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 33, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapColorSize2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapColorSize2}
 */
proto.jarviscrawlercore.SteepAndCheapProduct.prototype.addOffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, proto.jarviscrawlercore.SteepAndCheapColorSize2, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProduct.prototype.clearOffersList = function() {
  this.setOffersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.SteepAndCheapProducts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jarviscrawlercore.SteepAndCheapProducts.repeatedFields_, null);
};
goog.inherits(proto.jarviscrawlercore.SteepAndCheapProducts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.SteepAndCheapProducts.displayName = 'proto.jarviscrawlercore.SteepAndCheapProducts';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jarviscrawlercore.SteepAndCheapProducts.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.SteepAndCheapProducts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.SteepAndCheapProducts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapProducts.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxpage: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.jarviscrawlercore.SteepAndCheapProduct.toObject, includeInstance),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.SteepAndCheapProducts}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.SteepAndCheapProducts;
  return proto.jarviscrawlercore.SteepAndCheapProducts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.SteepAndCheapProducts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.SteepAndCheapProducts}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxpage(value);
      break;
    case 2:
      var value = new proto.jarviscrawlercore.SteepAndCheapProduct;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapProduct.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.SteepAndCheapProducts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.SteepAndCheapProducts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.SteepAndCheapProducts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxpage();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.jarviscrawlercore.SteepAndCheapProduct.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 maxPage = 1;
 * @return {number}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.getMaxpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.setMaxpage = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated SteepAndCheapProduct products = 2;
 * @return {!Array<!proto.jarviscrawlercore.SteepAndCheapProduct>}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.jarviscrawlercore.SteepAndCheapProduct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jarviscrawlercore.SteepAndCheapProduct, 2));
};


/** @param {!Array<!proto.jarviscrawlercore.SteepAndCheapProduct>} value */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.setProductsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.jarviscrawlercore.SteepAndCheapProduct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jarviscrawlercore.SteepAndCheapProduct}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.jarviscrawlercore.SteepAndCheapProduct, opt_index);
};


proto.jarviscrawlercore.SteepAndCheapProducts.prototype.clearProductsList = function() {
  this.setProductsList([]);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.SteepAndCheapProducts.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.RequestSteepAndCheap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jarviscrawlercore.RequestSteepAndCheap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.RequestSteepAndCheap.displayName = 'proto.jarviscrawlercore.RequestSteepAndCheap';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.RequestSteepAndCheap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.RequestSteepAndCheap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.RequestSteepAndCheap.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.RequestSteepAndCheap}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.RequestSteepAndCheap;
  return proto.jarviscrawlercore.RequestSteepAndCheap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.RequestSteepAndCheap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.RequestSteepAndCheap}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.jarviscrawlercore.SteepAndCheapMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.RequestSteepAndCheap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.RequestSteepAndCheap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.RequestSteepAndCheap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional SteepAndCheapMode mode = 1;
 * @return {!proto.jarviscrawlercore.SteepAndCheapMode}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.getMode = function() {
  return /** @type {!proto.jarviscrawlercore.SteepAndCheapMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.jarviscrawlercore.SteepAndCheapMode} value */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.setMode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.jarviscrawlercore.RequestSteepAndCheap.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jarviscrawlercore.ReplySteepAndCheap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jarviscrawlercore.ReplySteepAndCheap.oneofGroups_);
};
goog.inherits(proto.jarviscrawlercore.ReplySteepAndCheap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.jarviscrawlercore.ReplySteepAndCheap.displayName = 'proto.jarviscrawlercore.ReplySteepAndCheap';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jarviscrawlercore.ReplySteepAndCheap.oneofGroups_ = [[100,101]];

/**
 * @enum {number}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.ReplyCase = {
  REPLY_NOT_SET: 0,
  PRODUCTS: 100,
  PRODUCT: 101
};

/**
 * @return {proto.jarviscrawlercore.ReplySteepAndCheap.ReplyCase}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.getReplyCase = function() {
  return /** @type {proto.jarviscrawlercore.ReplySteepAndCheap.ReplyCase} */(jspb.Message.computeOneofCase(this, proto.jarviscrawlercore.ReplySteepAndCheap.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.toObject = function(opt_includeInstance) {
  return proto.jarviscrawlercore.ReplySteepAndCheap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jarviscrawlercore.ReplySteepAndCheap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.ReplySteepAndCheap.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    products: (f = msg.getProducts()) && proto.jarviscrawlercore.SteepAndCheapProducts.toObject(includeInstance, f),
    product: (f = msg.getProduct()) && proto.jarviscrawlercore.SteepAndCheapProduct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jarviscrawlercore.ReplySteepAndCheap}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jarviscrawlercore.ReplySteepAndCheap;
  return proto.jarviscrawlercore.ReplySteepAndCheap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jarviscrawlercore.ReplySteepAndCheap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jarviscrawlercore.ReplySteepAndCheap}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.jarviscrawlercore.SteepAndCheapMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 100:
      var value = new proto.jarviscrawlercore.SteepAndCheapProducts;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapProducts.deserializeBinaryFromReader);
      msg.setProducts(value);
      break;
    case 101:
      var value = new proto.jarviscrawlercore.SteepAndCheapProduct;
      reader.readMessage(value,proto.jarviscrawlercore.SteepAndCheapProduct.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jarviscrawlercore.ReplySteepAndCheap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jarviscrawlercore.ReplySteepAndCheap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jarviscrawlercore.ReplySteepAndCheap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getProducts();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.jarviscrawlercore.SteepAndCheapProducts.serializeBinaryToWriter
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.jarviscrawlercore.SteepAndCheapProduct.serializeBinaryToWriter
    );
  }
};


/**
 * optional SteepAndCheapMode mode = 1;
 * @return {!proto.jarviscrawlercore.SteepAndCheapMode}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.getMode = function() {
  return /** @type {!proto.jarviscrawlercore.SteepAndCheapMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.jarviscrawlercore.SteepAndCheapMode} value */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.setMode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SteepAndCheapProducts products = 100;
 * @return {?proto.jarviscrawlercore.SteepAndCheapProducts}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.getProducts = function() {
  return /** @type{?proto.jarviscrawlercore.SteepAndCheapProducts} */ (
    jspb.Message.getWrapperField(this, proto.jarviscrawlercore.SteepAndCheapProducts, 100));
};


/** @param {?proto.jarviscrawlercore.SteepAndCheapProducts|undefined} value */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.setProducts = function(value) {
  jspb.Message.setOneofWrapperField(this, 100, proto.jarviscrawlercore.ReplySteepAndCheap.oneofGroups_[0], value);
};


proto.jarviscrawlercore.ReplySteepAndCheap.prototype.clearProducts = function() {
  this.setProducts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.hasProducts = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional SteepAndCheapProduct product = 101;
 * @return {?proto.jarviscrawlercore.SteepAndCheapProduct}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.getProduct = function() {
  return /** @type{?proto.jarviscrawlercore.SteepAndCheapProduct} */ (
    jspb.Message.getWrapperField(this, proto.jarviscrawlercore.SteepAndCheapProduct, 101));
};


/** @param {?proto.jarviscrawlercore.SteepAndCheapProduct|undefined} value */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.setProduct = function(value) {
  jspb.Message.setOneofWrapperField(this, 101, proto.jarviscrawlercore.ReplySteepAndCheap.oneofGroups_[0], value);
};


proto.jarviscrawlercore.ReplySteepAndCheap.prototype.clearProduct = function() {
  this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jarviscrawlercore.ReplySteepAndCheap.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * @enum {number}
 */
proto.jarviscrawlercore.SteepAndCheapMode = {
  SACM_PRODUCTS: 0,
  SACM_PRODUCT: 1
};

goog.object.extend(exports, proto.jarviscrawlercore);
